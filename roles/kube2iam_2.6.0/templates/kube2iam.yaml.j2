###https://github.com/jtblin/kube2iam
#https://hub.docker.com/r/jtblin/kube2iam/tags
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:  
  name: kube2iam
rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    - pods
    verbs:
    - get
    - watch
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube2iam
subjects:
  - kind: ServiceAccount
    name: kube2iam
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kube2iam
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube2iam
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:  
  name: kube2iam  
  namespace: kube-system  
  labels:    
    app: kube2iam
spec:  
  selector:    
    matchLabels:      
      name: kube2iam  
  updateStrategy:    
    type: RollingUpdate  
  template:    
    metadata:      
      labels:        
        name: kube2iam 
    spec:      
      priorityClassName: system-cluster-critical
      serviceAccountName: kube2iam      
      hostNetwork: true      
      tolerations:
      - operator: Exists
      containers:        
        - image: jtblin/kube2iam:kube2iam-2.6.0      
          imagePullPolicy: Always          
          name: kube2iam
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi        
          args:                      
            - "--iptables=true"            
            - "--host-ip=$(HOST_IP)"            
            - "--node=$(NODE_NAME)"            
            - "--host-interface=eni+"          
          env:            
            - name: HOST_IP              
              valueFrom:                
                fieldRef:                  
                  fieldPath: status.podIP            
            - name: NODE_NAME              
              valueFrom:                
                fieldRef:                  
                  fieldPath: spec.nodeName          
          ports:            
            - containerPort: 8181              
              hostPort: 8181              
              name: http          
          securityContext:            
            privileged: true
